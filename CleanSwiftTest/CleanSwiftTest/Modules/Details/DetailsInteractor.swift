//
//  DetailsInteractor.swift
//  CleanSwiftTest
//
//  Created by Dave on 5/19/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import CoreData

protocol DetailsBusinessLogic
{  
    func fetchData()
    func deleteItem()
}

protocol DetailsDataStore
{
    //var name: String { get set }
}

class DetailsInteractor: DetailsBusinessLogic, DetailsDataStore
{
         
    var presenter: DetailsPresentationLogic?
    var worker: DetailsWorker?
    var dbWorker: CoreDataManagerProtocol?
    var index: Int?
    var allData: [Places] = []
    // MARK: Do something
    
    func fetchData()
    {
         
        guard let data = dbWorker?.fetchData(), let index = index, let title = data[index].titile, let detail = data[index].detail, let url = data[index].url else {return}
        allData = data
        worker?.downloadImage(from: URL(string: url)!) {[weak self] result in
            switch result {
            case .success(let data): 
                let sendingData = DetailsModel.Item.Response(title: title, details: detail, image: data)
                self?.presenter?.sendData(item: sendingData)
            default:
                print("Error")
            }
        }
             
    }
    
    
    func deleteItem() {
        let deleteData = CoreDataManager.shared.deleteItem(item: allData[index!])
        if deleteData {
            presenter?.itemDeleted()
        }
    }
     
}
 
